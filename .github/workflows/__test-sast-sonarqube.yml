name: Test SonarQube SAST Action

on:
  workflow_dispatch:

permissions:
  security-events: write

jobs:
  test-action:
    name: Test SonarQube SAST Action
    strategy:
      matrix:
        system: [
          { os: ubuntu-22.04, sonarqube-url: "https://sonarqube-ubuntu.b00158319.com"  },
          { os: windows-2022, sonarqube-url: "https://sonarqube-windows.b00158319.com" },
          { os: macos-14,     sonarqube-url: "https://sonarqube.a.pinggy.link"         }
        ]
        category: [
          { repository: seansmith2600/H6060-Java-Logback,      ref: 7ee000a0a359d239c60bb93a2f4f4ea467c38395, programming-language: java       },
          { repository: seansmith2600/H6060-Python-Urllib3,    ref: d1616473df94b94f0f5ad19d2a6608cfe93b7cdf, programming-language: python     },
          { repository: seansmith2600/H6060-JavaScript-Lodash, ref: 1144918f3578a84fcc4986da9b806e63a6175cbb, programming-language: javascript }
        ]
    runs-on: ${{ matrix.system.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: experiment-resources

      - name: Checkout Upstream Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.category.repository }}
          ref: ${{ matrix.category.ref }}
          path: upstream-repository

      - name: Setup Java JDK
        if: ${{ matrix.category.programming-language == 'java' }}
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: 17

      - name: Build Java Application
        if: ${{ matrix.category.programming-language == 'java' }}
        uses: ./experiment-resources/.github/actions/java/java-build
        with:
          build-command: mvn -Dmaven.test.skip=true clean install
          build-directory: "**/target"
          artifact-name: java-build-${{ matrix.system.os }}
          path: upstream-repository

      - name: Get SonarQube Token
        if: ${{ matrix.system.os == 'ubuntu-22.04' || matrix.system.os == 'macos-14' }}
        shell: bash
        run: |
          if [[ "${{ matrix.system.os }}" == "ubuntu-22.04" ]]; then
              echo "SONARQUBE_TOKEN=${{ secrets.TEST_SONARQUBE_TOKEN_UBUNTU }}" >> $GITHUB_ENV       
          else
              echo "SONARQUBE_TOKEN=${{ secrets.TEST_SONARQUBE_TOKEN_MACOS }}" >> $GITHUB_ENV
          fi

      - name: Get SonarQube Token
        if: ${{ matrix.system.os == 'windows-2022' }}
        shell: pwsh
        run: echo "SONARQUBE_TOKEN=${{ secrets.TEST_SONARQUBE_TOKEN_WINDOWS }}" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Run SonarQube (SAST)
        uses: ./experiment-resources/.github/actions/sast/sonarqube
        with:
          programming-language: ${{ matrix.category.programming-language }}
          sonarqube-token: ${{ env.SONARQUBE_TOKEN }}
          sonarqube-url: ${{ matrix.system.sonarqube-url }}
          sonarqube-username: ${{ secrets.TEST_SONARQUBE_USERNAME }}
          sonarqube-password: ${{ secrets.TEST_SONARQUBE_PASSWORD }}
          sonarqube-project-key: test-${{ matrix.category.programming-language }}
          artifact-name: sast-sonarqube-report-${{ matrix.category.programming-language }}-${{ matrix.system.os }}
          path: upstream-repository

name: Experiment 3 - JavaScript

on:
  workflow_call:
    inputs:
      operating-system:
        description: Operating system to run the workflow on
        required: true
        type: string

      sast-codeql-enabled:
        description: Enable CodeQL scan (SAST)
        type: boolean
        required: false
        default: true

      sast-horusec-enabled:
        description: Enable Horusec scan (SAST)
        type: boolean
        required: false
        default: true

      sast-semgrep-enabled:
        description: Enable Semgrep scan (SAST)
        type: boolean
        required: false
        default: true

      sast-sonarqube-enabled:
        description: Enable SonarQube scan (SAST)
        type: boolean
        required: false
        default: true

      sast-snyk-code-enabled:
        description: Enable Snyk Code scan (SAST)
        type: boolean
        required: false
        default: true

      sca-snyk-enabled:
        description: Enable Snyk scan (SCA)
        type: boolean
        required: false
        default: true

      sca-owasp-dependency-check-enabled:
        description: Enable OWASP Dependency Check scan (SCA)
        type: boolean
        required: false
        default: true

      sca-grype-enabled:
        description: Enable Grype scan (SCA)
        type: boolean
        required: false
        default: true

      project-name:
        description: Name of project to be scanned
        type: string
        required: false

      build-artifact:
        description: Name of build artifact
        type: string
        required: false

      build-directory:
        description: Name of project build directory
        type: string
        required: false

      node-version:
        description: Node.js version to install
        type: string
        required: false
        default: 16.x

      horusec-files-or-paths-to-ignore:
        description: Paths to ignore during the Horusec scan
        type: string
        required: false
        default: "**/test/**"

      semgrep-files-or-paths-to-ignore:
        description: Paths to ignore during the Semgrep scan
        type: string
        required: false
        default: "test,tests"



env:
  CHECKOUT_CURRENT_REPO_NAME: seansmith2600/H6060-Experiment-Resources
  CHECKOUT_CURRENT_REPO_PATH: experiment-resources-repository
  CHECKOUT_PROJECT_REPO_PATH: upstream-repository
  DOWNLOAD_WORKFLOW_CONCLUSION: in_progress
  PROJECT_PROGRAMMING_LANGUAGE: javascript

permissions:
  security-events: write

defaults:
  run:
    shell: bash

jobs:
  sast-codeql:
    name: (SAST) CodeQL - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-codeql-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run CodeQL (SAST)
        uses: ./experiment-resources-repository/.github/actions/sast/codeql
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          artifact-name: sast-codeql-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-horusec:
    name: (SAST) Horusec - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-horusec-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Horusec (SAST)
        uses: ./experiment-resources-repository/.github/actions/sast/horusec
        with:
          files-or-paths-to-ignore: ${{ inputs.horusec-files-or-paths-to-ignore }}
          artifact-name: sast-horusec-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-semgrep:
    name: (SAST) Semgrep - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-semgrep-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Semgrep (SAST)
        uses: ./experiment-resources-repository/.github/actions/sast/semgrep
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          files-or-paths-to-ignore: ${{ inputs.semgrep-files-or-paths-to-ignore }}
          artifact-name: sast-semgrep-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-snyk-code:
    name: (SAST) Snyk Code - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-snyk-code-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Run Snyk Code (SAST)
        uses: ./experiment-resources-repository/.github/actions/sast/snyk-code
        with:
          artifact-name: sast-snyk-code-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sast-sonarqube:
    name: (SAST) SonarQube - ${{ inputs.operating-system }}
    if: ${{ inputs.sast-sonarqube-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ${{ inputs.build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          fail: true

      - name: Set SonarQube Environment Variables
        if: ${{ inputs.operating-system == 'ubuntu-22.04' || inputs.operating-system == 'macos-14' }}
        shell: bash
        run: |
          if [[ "${{ inputs.operating-system }}" == "ubuntu-22.04" ]]; then
              echo "SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN_UBUNTU }}" >> $GITHUB_ENV
              echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_UBUNTU }}" >> $GITHUB_ENV
          else
              echo "SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN_MACOS }}" >> $GITHUB_ENV
              echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_MACOS }}" >> $GITHUB_ENV
          fi

      - name: Set SonarQube Environment Variables (Windows)
        if: ${{ inputs.operating-system == 'windows-2022' }}
        shell: pwsh
        run: |
          echo "SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN_WINDOWS }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_WINDOWS }}" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Run SonarQube (SAST)
        uses: ./experiment-resources-repository/.github/actions/sast/sonarqube
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          sonarqube-token: ${{ env.SONARQUBE_TOKEN }}
          sonarqube-url: ${{ env.SONARQUBE_URL }}
          sonarqube-username: ${{ secrets.SONARQUBE_USERNAME }}
          sonarqube-password: ${{ secrets.SONARQUBE_PASSWORD }}
          sonarqube-project-key: ${{ inputs.project-name }}
          artifact-name: sast-sonarqube-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-grype:
    name: (SCA) Grype - ${{ inputs.operating-system }}
    if: ${{ inputs.sca-grype-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Current GitHub Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ${{ inputs.build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          fail: true

      - name: Run Grype (SCA)
        uses: ./experiment-resources-repository/.github/actions/sca/grype
        with:
          artifact-name: sca-grype-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-owasp-dependency-check:
    name: (SCA) OWASP Dependency Check - ${{ inputs.operating-system }}
    if: ${{ inputs.sca-owasp-dependency-check-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Current GitHub Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ${{ inputs.build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          fail: true

      - name: Run OWASP Dependency Check (SCA)
        uses: ./experiment-resources-repository/.github/actions/sca/owasp-dependency-check
        with:
          nvd-api-key: ${{ secrets.NVD_API_KEY }}
          project-name: ${{ inputs.project-name }}
          artifact-name: sca-owasp-dependency-check-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  sca-snyk:
    name: (SCA) Snyk - ${{ inputs.operating-system }}
    if: ${{ inputs.sca-snyk-enabled == true }}
    runs-on: ${{ inputs.operating-system }}
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}
          path: ${{ env.CHECKOUT_CURRENT_REPO_PATH }}

      - name: Checkout Project Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

      - name: Download Project Build
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ${{ inputs.build-artifact }}
          path: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Check For File Existence
        if: ${{ inputs.build-directory != '' }}
        uses: andstor/file-existence-action@v3
        with:
          files: "${{ env.CHECKOUT_PROJECT_REPO_PATH }}/${{ inputs.build-directory }}"
          fail: true

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install JavaScript Dependencies
        run: npm ci

      - name: Run Snyk (SCA)
        uses: ./experiment-resources-repository/.github/actions/sca/snyk
        with:
          programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          artifact-name: sca-snyk-report-${{ runner.os }}
          path: ${{ env.CHECKOUT_PROJECT_REPO_PATH }}

  create-cyclonedx-osv-report:
    name: Create CycloneDX OSV Report - ${{ inputs.operating-system }}
    runs-on: ${{ inputs.operating-system }}
    needs: [
      sca-eclipse-steady,
      sca-grype,
      sca-owasp-dependency-check,
      sca-snyk
    ]
    steps:
      - name: Checkout Current GitHub Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}

      - name: Download All Build Artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Create CycloneDX OSV Report
        uses: ./experiment-resources/.github/actions/reporting/cyclonedx-sbom-osv-report
        with:
          github-api-token: ${{ secrets.TEST_GITHUB_API_TOKEN }}
          github-secret-access-token: ${{ secrets.GITHUB_TOKEN }}
          experiment-id: 3
          experiment-github-project-name: ${{ inputs.project-name }}
          experiment-github-repository: ${{ github.repository }}
          experiment-programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          cyclonedx-sbom-artifact-name: cyclonedx-sbom-${{ runner.os }}
          cyclonedx-sbom-filename: sbom.json
          artifact-name: cyclonedx-sbom-osv-report-${{ runner.os }}
          include-unit-tests: false

  create-security-testing-tool-report:
    name: Create Security Testing Tool Report - ${{ inputs.operating-system }}
    runs-on: ${{ inputs.operating-system }}
    needs: [
      sast-codeql,
      sast-horusec,
      sast-semgrep,
      sast-snyk-code,
      sast-sonarqube,
      sca-grype,
      sca-owasp-dependency-check,
      sca-snyk
    ]
    steps:
      - name: Checkout Current GitHub Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}

      - name: Download All Build Artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: ${{ env.DOWNLOAD_WORKFLOW_CONCLUSION }}
          commit: ${{ github.event.workflow_run.head_commit.id }}

      - name: Set SonarQube Environment Variables
        if: ${{ inputs.operating-system == 'ubuntu-22.04' || inputs.operating-system == 'macos-14' }}
        shell: bash
        run: |
          if [[ "${{ inputs.operating-system }}" == "ubuntu-22.04" ]]; then
              echo "SONARQUBE_TOKEN=${{ secrets.SONARQUBE_USER_TOKEN_UBUNTU }}" >> $GITHUB_ENV
              echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_UBUNTU }}" >> $GITHUB_ENV
          else
              echo "SONARQUBE_TOKEN=${{ secrets.SONARQUBE_USER_TOKEN_MACOS }}" >> $GITHUB_ENV
              echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_MACOS }}" >> $GITHUB_ENV
          fi

      - name: Set SonarQube Environment Variables (Windows)
        if: ${{ inputs.operating-system == 'windows-2022' }}
        shell: pwsh
        run: |
          echo "SONARQUBE_USER_TOKEN=${{ secrets.SONARQUBE_USER_TOKEN_WINDOWS }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "SONARQUBE_URL=${{ secrets.SONARQUBE_URL_WINDOWS }}" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Only applicable for Ubuntu and MacOS
      - name: Set Grype Environment Variable
        shell: bash
        run: |
          if [[ "${{ inputs.sca-grype-enabled }}" == "true" && "${{ inputs.operating-system }}" != "windows-2022" }} ]]; then
              echo "SCA_GRYPE_REPORT_FILENAME=sca-grype-report-${{ runner.os }}/results.json" >> $GITHUB_ENV
          else
              echo "SCA_GRYPE_REPORT_FILENAME=" >> $GITHUB_ENV
          fi

      - name: Create Security Testing Tool Report
        uses: ./.github/actions/common/security-testing-tool-csv-report
        with:
          nvd-api-key: ${{ secrets.NVD_API_KEY }}
          github-api-token: ${{ secrets.GITHUB_API_TOKEN }}
          opencve-username: ${{ secrets.OPENCVE_USERNAME }}
          opencve-password: ${{ secrets.OPENCVE_PASSWORD }}
          experiment-id: 3
          experiment-github-project-name: ${{ inputs.project-name }}
          experiment-programming-language: ${{ env.PROJECT_PROGRAMMING_LANGUAGE }}
          sonarqube-url: ${{ env.SONARQUBE_URL }}
          sonarqube-user-token: ${{ env.SONARQUBE_USER_TOKEN }}
          sonarqube-project-key: ${{ inputs.project-name }}
          deepsource-api-key: ${{ secrets.DEEPSOURCE_API_KEY }}
          sast-horusec-report-filename: sast-horusec-report-${{ runner.os }}/horusec-report.json
          sast-semgrep-report-filename: sast-semgrep-report-${{ runner.os }}/semgrep-report.json
          sast-snyk-code-report-filename: sast-snyk-code-report-${{ runner.os }}/snyk-code-report.json
          sca-grype-report-filename: ${{ env.SCA_GRYPE_REPORT_FILENAME }}
          sca-owasp-dependency-check-report-filename: sca-owasp-dependency-check-report-${{ runner.os }}/owasp-dependency-check-report.json
          sca-snyk-report-filename: sca-snyk-report-${{ runner.os }}/snyk-report.json
          artifact-name: automated-vulnerability-results-report-${{ runner.os }}
          include-unit-tests: false

  export-opentelemetry-metrics:
    name: Export GitHub Action OpenTelemetry Metrics - ${{ inputs.operating-system }}
    needs: [ create-cyclonedx-osv-report, create-security-testing-tool-report ]
    runs-on: ${{ inputs.operating-system }}
    steps:
      - name: Checkout Current GitHub Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.CHECKOUT_CURRENT_REPO_NAME }}

      - name: Export GitHub Action OpenTelemetry Metrics
        uses: ./.github/actions/metrics/opentelemetry-metrics-exporter
        with:
          honeycomb-api-key: ${{ secrets.HONEYCOMB_API_KEY }}
          original-github-workflow-name: ${{ github.workflow }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
